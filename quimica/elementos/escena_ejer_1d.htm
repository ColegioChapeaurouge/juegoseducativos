<?xml version="1.0" encoding="iso-8859-1"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Enric Ripoll Mira."></meta><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>

<link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
<meta name="DC:Creator" content="Enric Ripoll Mira" />
<meta name="DC:Creator" content="Enric" />
<meta name="DC:Title" content="&#x003C;a href=&quot;D:/videos/SDV_0015.MP4&quot; title=&quot;D:/videos/SDV_0015.MP4&quot;&#x003E;D:/videos/SDV_0015.MP4&#x003C;/a&#x003E;Compuestos" />


<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />

<title>
</title>

<!-- Made with executable version 6.3 Release 0 Build 0 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<style type="text/css">


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 6.3 Release 0 Build 0 */


/* Hack to hide a nested Quicktime player from IE, which can't handle it. */
* html object.MediaPlayerNotForIE {
	display: none;
}

body{
	font-family: Geneva,Arial;
	background-color: #f0f0f0;
	color: #000099;
    background-image: url();
	margin-right: 5%;
	margin-left: 5%;
	font-size: small;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

table,div,span,td{
	font-size: 100%;
	color: #000099;
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: #0000FF;
}

button{
	font-family: Geneva,Arial;
	font-size: 100%;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: #0000FF;
}

.ExerciseSubtitle{
	font-size: 120%;
	color: #0000FF;
}

div.StdDiv{
	background-color: #f1f1f1;
	text-align: center;
	font-size: 100%;
	color: #000099;
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: #000099;
	margin-bottom: 1px;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial;
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial;
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", Geneva,Arial;
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: #0000FF;
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: #0000FF;
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: #0000FF;
}

.LeftItem{
	font-size: 100%;
	color: #000099;
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 100%;
	color: #000099;
}

span.CorrectMark{

}

input, textarea{
	font-family: Geneva,Arial;
	font-size: 120%;
}

select{
	font-size: 100%;
}

div.Feedback {
	background-color: #ffffff;
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: #0000FF;
	position: absolute;
	display: none;
	font-size: 100%;
}




div.ExerciseDiv{
	color: #000099;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: #000099;
	border-color: #000099;
	margin-left: 5%;
	margin-right: 5%;
	margin-top: 2em;
	margin-bottom: 2em;
	width: 90%;
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: #ffffff;
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	color: #000099;
	background-color: #ffffff;
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: #000099;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: center;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: #0000FF;
	width: 80%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: Geneva,Arial;
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: Geneva,Arial;
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

.Answer{
	font-size: 120%;
	letter-spacing: 0.1em;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: #0000FF;
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	text-align: center;
	border-style: solid;

	border-left-color: #ffffff;
	border-top-color: #ffffff;
	border-right-color: #7f7f7f;
	border-bottom-color: #7f7f7f;
	color: #000099;
	background-color: #ffffff;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonUp {
	color: #ffffff;
	text-align: center;
	border-style: solid;

	border-left-color: #ffffff;
	border-top-color: #ffffff;
	border-right-color: #7f7f7f;
	border-bottom-color: #7f7f7f;

	background-color: #000099;
	color: #ffffff;
	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonDown {
	color: #ffffff;
	text-align: center;
	border-style: solid;

	border-left-color: #7f7f7f;
	border-top-color: #7f7f7f;
	border-right-color: #ffffff;
	border-bottom-color: #ffffff;
	background-color: #000099;
	color: #ffffff;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: #ffffff;
	text-align: center;
	margin: 2px 0px 2px 0px;
	clear: both;
	font-size: 100%;
}

.NavButton {
	border-style: solid;

	border-left-color: #ffffff;
	border-top-color: #ffffff;
	border-right-color: #7f7f7f;
	border-bottom-color: #7f7f7f;
	background-color: #ffffff;
	color: #000000;

	border-width: 2px;
	cursor: pointer;
}

.NavButtonUp {
	border-style: solid;

	border-left-color: #ffffff;
	border-top-color: #ffffff;
	border-right-color: #7f7f7f;
	border-bottom-color: #7f7f7f;
	color: #ffffff;
	background-color: #000000;

	border-width: 2px;
	cursor: pointer;
}

.NavButtonDown {
	border-style: solid;

	border-left-color: #7f7f7f;
	border-top-color: #7f7f7f;
	border-right-color: #ffffff;
	border-bottom-color: #ffffff;
	color: #ffffff;
	background-color: #000000;

	border-width: 2px;
	cursor: pointer;
}

/*EndNavBarStyle*/

a{
	color: #ff0000;
}

a:visited{
	color: #000000;
}

a:hover{
	color: #ff0000;
}

div.CardStyle {
	position: absolute;
	font-family: Geneva,Arial;
	font-size: 100%;
	padding: 5px;
	border-style: solid;
	border-width: 1px;
	color: #000099;
	background-color: #ffffff;
	left: -50px;
	top: -50px;
	overflow: visible;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


.Estilo13 {color: #1B64D7;
	font-size: 20px;
}
.Estilo3 {font-size: 16px;
	color: #808080;
	font-family: Geneva, Arial, Helvetica, sans-serif;
	font-weight: bold;
}
.Estilo6 {color: #000099}
div.Titles1 {padding: 0.5em;;
	text-align: center;
	color: #000000;
}
</style>

<script type="text/javascript">
<!--
//<![CDATA[

<!--


//MDH_SCORM modification to support SCORM 1.2 functionality on LMS
/* JavaScript to find the SCORM API if it is available */
/* Based on a model at <http://www.claroline.net/doc/en/index.php/How_do_I_create_SCORM_content%3F> */

var API = null; /* SCORM API */

/* look up through the frameset hierarchy for the SCORM API */
function findAPI(win)
{
	while ((win.API == null) && (win.parent != null) && (win.parent != win))
	{
		win = win.parent;
	}
	API = win.API;
}

/* initialize the SCORM API */
function initAPI(win)
{
	/* look for the SCORM API up in the frameset */
	findAPI(win);

	/* if we still have not found the API, look at the opener and its frameset */
	if ((API == null) && (win.opener != null))
	{
		findAPI(win.opener);
	}
}

var ScormSubmitted = false; //use this to check whether LMSFinish has been called later.

function ScormStartUp(){
	initAPI(window);
	if (API != null){
		API.LMSInitialize('');
		API.LMSSetValue('cmi.core.lesson_status', 'browsed');
		API.LMSSetValue('cmi.core.score.min', 0);
		API.LMSSetValue('cmi.core.score.max', 100);
		API.LMSCommit('');
	}
}

function CheckLMSFinish(){
	if (API != null){
		if (ScormSubmitted == false){
			API.LMSCommit('');
			API.LMSFinish('');
			ScormSubmitted = true;
		}
	}
}

function SetScormIncomplete(){
	if (ScormSubmitted == true){
		return;
	}
	SetScormScore();
	if (API != null){
		API.LMSSetValue('cmi.core.lesson_status', 'incomplete');
		API.LMSSetValue('cmi.core.session_time', MillisecondsToTime((new Date()).getTime() - ScormStartTime));
		API.LMSCommit('');
	}
}

function SetScormComplete(){
	if (API != null){
		API.LMSSetValue('cmi.core.session_time', MillisecondsToTime((new Date()).getTime() - ScormStartTime));
		API.LMSSetValue('cmi.core.lesson_status', 'completed');
		SetScormScore();
		API.LMSCommit('');
		API.LMSFinish('');
		ScormSubmitted = true;
	}
}

var ScormStartTime = (new Date()).getTime();

var SuspendData = '';

function SetScormTimedOut(){
	if (API != null){
		if (ScormSubmitted == false){
			SetScormScore();
			API.LMSSetValue('cmi.core.exit', 'time-out');
			API.LMSCommit('');
			CheckLMSFinish();
		}
	}
}

//TIME RENDERING FUNCTION
function MillisecondsToTime(Seconds){
	Seconds = Math.round(Seconds/1000);
	var S = Seconds % 60;
	Seconds -= S;
	if (S < 10){S = '0' + S;}
	var M = (Seconds / 60) % 60;
	if (M < 10){M = '0' + M;}
	var H = Math.floor(Seconds / 3600);
	if (H < 10){H = '0' + H;}
	return H + ':' + M + ':' + S;
}




function Client(){
//if not a DOM browser, hopeless
	this.min = false; if (document.getElementById){this.min = true;};

	this.ua = navigator.userAgent;
	this.name = navigator.appName;
	this.ver = navigator.appVersion;

//Get data about the browser
	this.mac = (this.ver.indexOf('Mac') != -1);
	this.win = (this.ver.indexOf('Windows') != -1);

//Look for Gecko
	this.gecko = (this.ua.indexOf('Gecko') > 1);
	if (this.gecko){
		this.geckoVer = parseInt(this.ua.substring(this.ua.indexOf('Gecko')+6, this.ua.length));
		if (this.geckoVer < 20020000){this.min = false;}
	}

//Look for Firebird
	this.firebird = (this.ua.indexOf('Firebird') > 1);

//Look for Safari
	this.safari = (this.ua.indexOf('Safari') > 1);
	if (this.safari){
		this.gecko = false;
	}

//Look for IE
	this.ie = (this.ua.indexOf('MSIE') > 0);
	if (this.ie){
		this.ieVer = parseFloat(this.ua.substring(this.ua.indexOf('MSIE')+5, this.ua.length));
		if (this.ieVer < 5.5){this.min = false;}
	}

//Look for Opera
	this.opera = (this.ua.indexOf('Opera') > 0);
	if (this.opera){
		this.operaVer = parseFloat(this.ua.substring(this.ua.indexOf('Opera')+6, this.ua.length));
		if (this.operaVer < 7.04){this.min = false;}
	}
	if (this.min == false){
		alert('Your browser may not be able to handle this page.');
	}

//Special case for the horrible ie5mac
	this.ie5mac = (this.ie&&this.mac&&(this.ieVer<6));
}

var C = new Client();

//for (prop in C){
//	alert(prop + ': ' + C[prop]);
//}



//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

//[strNavBarJS]
function NavBtnOver(Btn){
	if (Btn.className != 'NavButtonDown'){Btn.className = 'NavButtonUp';}
}

function NavBtnOut(Btn){
	Btn.className = 'NavButton';
}

function NavBtnDown(Btn){
	Btn.className = 'NavButtonDown';
}
//[/strNavBarJS]

function FuncBtnOver(Btn){
	if (Btn.className != 'FuncButtonDown'){Btn.className = 'FuncButtonUp';}
}

function FuncBtnOut(Btn){
	Btn.className = 'FuncButton';
}

function FuncBtnDown(Btn){
	Btn.className = 'FuncButtonDown';
}

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);

//
//	RefreshImages();
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
				//get Mac FireFox to manipulate display, to force screen redraw
				if (C.mac && C.gecko) {Els[i].style.display = '';}
			}
			else{
				Els[i].style.visibility = 'hidden';
				if (C.mac && C.gecko) {Els[i].style.display = 'none';}
			}
		}
		else {
			// tagName is either input or select (that is, Form Elements)
			// ie6 has a problem with Form elements, so manipulate those
			if (C.ie) {
				if (C.ieVer < 7) {
					if (Show == true){
						Els[i].style.visibility = 'visible';
					}
					else{
						Els[i].style.visibility = 'hidden';
					}
				}
			}
		}
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
	if (Finished == true){
		Finish();
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].clientWidth;
	this.H = document.getElementsByTagName('body')[0].clientHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T;
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){
	if (InTextBox == true){return;}
	if (C.ie) {
		thisKey = window.event.keyCode;
	}
	else {
		thisKey = e.keyCode;
	}

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
	}

	if (Suppress == true){
		if (C.ie){
			window.event.returnValue = false;
			window.event.cancelBubble = true;
		}
		else{
			e.preventDefault();
		}
	}
}

if (C.ie){
	document.attachEvent('onkeydown',SuppressBackspace);
	window.attachEvent('onkeydown',SuppressBackspace);
}
else{
	if (window.addEventListener){
		window.addEventListener('keypress',SuppressBackspace,false);
	}
}

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

	RefreshImages();

}



Imgs = new Array();

function PreloadImages(){
	var a = PreloadImages.arguments;
	for (var i=0; i<a.length; i++){
		Imgs[i] = new Image();
		Imgs[i].src = a[i];
	}
}

function RefreshImages(){
	for (var i=0; i<document.images.length; i++){
		if (document.images[i].name.substring(0,6) != 'NavBar'){
			document.images[i].src = document.images[i].src;
		}
	}
}


function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}

//EXTENSION TO ARRAY OBJECT
function Array_IndexOf(Input){
	var Result = -1;
	for (var i=0; i<this.length; i++){
		if (this[i] == Input){
			Result = i;
		}
	}
	return Result;
}
Array.prototype.indexOf = Array_IndexOf;

//IE HAS RENDERING BUG WITH BOTTOM NAVBAR
function RemoveBottomNavBarForIE(){
	if ((C.ie)&&(document.getElementById('Reading') != null)){
		if (document.getElementById('BottomNavBar') != null){
			document.getElementById('TheBody').removeChild(document.getElementById('BottomNavBar'));
		}
	}
}




//HOTPOTNET-RELATED CODE

var HPNStartTime = (new Date()).getTime();
var SubmissionTimeout = 30000;
var Detail = ''; //Global that is used to submit tracking data

function Finish(){
//If there's a form, fill it out and submit it
	if (document.store != null){
		Frm = document.store;
		Frm.starttime.value = HPNStartTime;
		Frm.endtime.value = (new Date()).getTime();
		Frm.mark.value = Score;
		Frm.detail.value = Detail;
		Frm.submit();
	}
}




//JQUIZ-SPECIFIC SCORM-RELATED JAVASCRIPT CODE

function SetScormScore(){
//Reports the current score and any other information back to the LMS
	if (API != null){
		API.LMSSetValue('cmi.core.score.raw', Score);
//Now send detailed reports about each item
		for (var i=0; i<State.length; i++){
			if (State[i] != null){
				var ItemLabel = 'Item_' + (i+1).toString();
				var ThisItemScore = '';
				var ThisItemStatus = '';
				API.LMSSetValue('cmi.objectives.' + i + '.id', 'obj'+ItemLabel);
				API.LMSSetValue('cmi.interactions.' + i + '.id', 'int'+ItemLabel);
				API.LMSSetValue('cmi.objectives.' + i + '.score.min', '0');
				API.LMSSetValue('cmi.objectives.' + i + '.score.max', '100');
				if (State[i][2] > 0){
					ThisItemScore = Math.floor(State[i][0] * 100) + '';
					ThisItemStatus = 'completed';
				}
				else{
					ThisItemScore = '0';
					ThisItemStatus = 'incomplete';
				}
				API.LMSSetValue('cmi.objectives.' + i + '.score.raw', ThisItemScore);
				API.LMSSetValue('cmi.objectives.' + i + '.status', ThisItemStatus);
				API.LMSSetValue('cmi.interactions.' + i + '.weighting', I[i][0]);
//We can only use the performance type, because we're storing multiple responses of various types.
				API.LMSSetValue('cmi.interactions.' + i + '.type', 'performance');
				API.LMSSetValue('cmi.interactions.' + i + '.student_response', State[i][5]);
			}
		}

		API.LMSCommit('');
	}
}


//JQUIZ CORE JAVASCRIPT CODE

var CurrQNum = 0;
var CorrectIndicator = '<img src="imagen3/bien.png" alt="bien.png" title="4b" width="22" height="22"></img>';
var IncorrectIndicator = '<img src="imagen3/mal.png" alt="bien.png" title="4b" width="22" height="22"></img>';
var YourScoreIs = 'Tu puntuaci&#x00F3;n es:';

//New for 6.2.2.0
var CompletedSoFar = 'Preguntas respondidas hasta el momento:';
var ExerciseCompleted = 'Finalizaste el ejercicio.';
var ShowCompletedSoFar = true;

var ContinuousScoring = true;
var CorrectFirstTime = 'Respuestas correctas al primer intento:';
var ShowCorrectFirstTime = true;
var ShuffleQs = true;
var ShuffleAs = true;
var DefaultRight = 'Correcto';
var DefaultWrong = 'Int&#x00E9;ntalo otra vez';
var QsToShow = 10;
var Score = 0;
var Finished = false;
var Qs = null;
var QArray = new Array();
var ShowingAllQuestions = false;
var ShowAllQuestionsCaption = '';
var ShowOneByOneCaption = 'Ver las preguntas una a una';
var State = new Array();
var Feedback = '';
var TimeOver = false;
var strInstructions = '';
var Locked = false;

//The following variable can be used to add a message explaining that
//the question is finished, so no further marking will take place.
var strQuestionFinished = '';

function CompleteEmptyFeedback(){
	var QNum, ANum;
	for (QNum=0; QNum<I.length; QNum++){
//Only do this if not multi-select
		if (I[QNum][2] != '3'){
  		for (ANum = 0; ANum<I[QNum][3].length; ANum++){
  			if (I[QNum][3][ANum][1].length < 1){
  				if (I[QNum][3][ANum][2] > 0){
  					I[QNum][3][ANum][1] = DefaultRight;
  				}
  				else{
  					I[QNum][3][ANum][1] = DefaultWrong;
  				}
  			}
  		}
		}
	}
}

function SetUpQuestions(){
	var AList = new Array();
	var QList = new Array();
	var i, j;
	Qs = document.getElementById('Questions');
	while (Qs.getElementsByTagName('li').length > 0){
		QList.push(Qs.removeChild(Qs.getElementsByTagName('li')[0]));
	}
	var DumpItem = 0;
	if (QsToShow > QList.length){
		QsToShow = QList.length;
	}
	while (QsToShow < QList.length){
		DumpItem = Math.floor(QList.length*Math.random());
		for (j=DumpItem; j<(QList.length-1); j++){
			QList[j] = QList[j+1];
		}
		QList.length = QList.length-1;
	}
	if (ShuffleQs == true){
		QList = Shuffle(QList);
	}
	if (ShuffleAs == true){
		var As;
		for (var i=0; i<QList.length; i++){
			As = QList[i].getElementsByTagName('ol')[0];
			if (As != null){
  			AList.length = 0;
				while (As.getElementsByTagName('li').length > 0){
					AList.push(As.removeChild(As.getElementsByTagName('li')[0]));
				}
				AList = Shuffle(AList);
				for (j=0; j<AList.length; j++){
					As.appendChild(AList[j]);
				}
			}
		}
	}

	for (i=0; i<QList.length; i++){
		Qs.appendChild(QList[i]);
		QArray[QArray.length] = QList[i];
	}

//Show the first item
	QArray[0].style.display = '';

//Now hide all except the first item
	for (i=1; i<QArray.length; i++){
		QArray[i].style.display = 'none';
	}
	SetQNumReadout();

	SetFocusToTextbox();
}

function SetFocusToTextbox(){
//if there's a textbox, set the focus in it
	if (QArray[CurrQNum].getElementsByTagName('input')[0] != null){
		QArray[CurrQNum].getElementsByTagName('input')[0].focus();
//and show a keypad if there is one
		if (document.getElementById('CharacterKeypad') != null){
			document.getElementById('CharacterKeypad').style.display = 'block';
		}
	}
	else{
  	if (QArray[CurrQNum].getElementsByTagName('textarea')[0] != null){
  		QArray[CurrQNum].getElementsByTagName('textarea')[0].focus();
//and show a keypad if there is one
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'block';
			}
		}
//This added for 6.0.4.11: hide accented character buttons if no textbox
		else{
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'none';
			}
		}
	}
}

function ChangeQ(ChangeBy){
//The following line prevents moving to another question until the current
//question is answered correctly. Uncomment it to enable this behaviour.
//	if (State[CurrQNum][0] == -1){return;}
	if (((CurrQNum + ChangeBy) < 0)||((CurrQNum + ChangeBy) >= QArray.length)){return;}
	QArray[CurrQNum].style.display = 'none';
	CurrQNum += ChangeBy;
	QArray[CurrQNum].style.display = '';
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
	SetQNumReadout();
	SetFocusToTextbox();
}

var HiddenReadingShown = false;
function ShowSpecialReadingForQuestion(){
//Undocumented function for showing specific reading text elements which change with each question
//Added on 10/12/2004
	if (document.getElementById('ReadingDiv') != null){
		if (HiddenReadingShown == true){
			document.getElementById('ReadingDiv').innerHTML = '';
		}
		if (QArray[CurrQNum] != null){
//Fix for 6.0.4.25
			var Children = QArray[CurrQNum].getElementsByTagName('div');
			for (var i=0; i<Children.length; i++){
			if (Children[i].className=="HiddenReading"){
					document.getElementById('ReadingDiv').innerHTML = Children[i].innerHTML;
					HiddenReadingShown = true;
//Hide the ShowAllQuestions button to avoid confusion
					if (document.getElementById('ShowMethodButton') != null){
						document.getElementById('ShowMethodButton').style.display = 'none';
					}
				}
			}
		}
	}
}

function SetQNumReadout(){
	document.getElementById('QNumReadout').innerHTML = (CurrQNum+1) + ' / ' + QArray.length;
	if ((CurrQNum+1) >= QArray.length){
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'visible';
		}
	}
	if (CurrQNum <= 0){
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'visible';
		}
	}
}

var I=new Array();
I[0]=new Array();I[0][0]=100;
I[0][1]='';
I[0][2]='1';
I[0][3]=new Array();
I[0][3][0]=new Array('Compuesto','',1,100,1);
I[1]=new Array();I[1][0]=100;
I[1][1]='';
I[1][2]='1';
I[1][3]=new Array();
I[1][3][0]=new Array('Ox\u00EDgeno','',1,100,1);
I[2]=new Array();I[2][0]=100;
I[2][1]='';
I[2][2]='1';
I[2][3]=new Array();
I[2][3][0]=new Array('qu\u00EDmicos','',1,100,1);
I[2][3][1]=new Array('reacciones','',1,100,1);
I[2][3][2]=new Array('reacciones qu\u00EDmicas','',1,100,1);
I[2][3][3]=new Array('reacci\u00F3n','',1,100,1);
I[3]=new Array();I[3][0]=100;
I[3][1]='';
I[3][2]='1';
I[3][3]=new Array();
I[3][3][0]=new Array('mezcla','',1,100,1);
I[4]=new Array();I[4][0]=100;
I[4][1]='';
I[4][2]='3';
I[4][3]=new Array();
I[4][3][0]=new Array('Los compuestos tienen propiedades f\u00EDsicas constantes.','',1,100,1);
I[4][3][1]=new Array('Las mezclas tienen propiedades f\u00EDsicas constantes','',0,0,1);
I[4][3][2]=new Array('Una mezcla tiene una composici\u00F3n variable.','',1,100,1);
I[4][3][3]=new Array('Un compuesto tiene una composici\u00F3n fija.','',1,100,1);
I[5]=new Array();I[5][0]=100;
I[5][1]='';
I[5][2]='1';
I[5][3]=new Array();
I[5][3][0]=new Array('emp\u00EDrica','',1,100,1);
I[6]=new Array();I[6][0]=100;
I[6][1]='';
I[6][2]='1';
I[6][3]=new Array();
I[6][3][0]=new Array('molecular','',1,100,1);
I[7]=new Array();I[7][0]=100;
I[7][1]='';
I[7][2]='0';
I[7][3]=new Array();
I[7][3][0]=new Array('Zn<sup>2+</sup>','',1,100,1);
I[7][3][1]=new Array('S<sup>2-</sup>','',0,0,1);
I[8]=new Array();I[8][0]=100;
I[8][1]='';
I[8][2]='3';
I[8][3]=new Array();
I[8][3][0]=new Array('Un \u00E1tomo con carga negativa','',0,0,1);
I[8][3][1]=new Array('Un \u00E1tomo con carga positiva','',1,100,1);
I[8][3][2]=new Array('Una mol\u00E9cula sin carga','',0,0,1);
I[8][3][3]=new Array('Un \u00E1tomo con menos electrones que en su estado neutro.','',1,100,1);
I[9]=new Array();I[9][0]=100;
I[9][1]='';
I[9][2]='3';
I[9][3]=new Array();
I[9][3][0]=new Array('Forman cristales','',1,100,1);
I[9][3][1]=new Array('Forman mol\u00E9culas','',0,0,1);
I[9][3][2]=new Array('Forman s\u00F3lidos amorfos','',0,0,1);


function StartUp(){
	RemoveBottomNavBarForIE();

//If there's only one question, no need for question navigation controls
	if (QsToShow < 2){
		document.getElementById('QNav').style.display = 'none';
	}

//Stash the instructions so they can be redisplayed
	strInstructions = document.getElementById('InstructionsDiv').innerHTML;


	ScormStartUp();





	PreloadImages('imagen3/bien.png','imagen3/mal.png','imagen3/atras.png','imagen3/adelante.png');


	CompleteEmptyFeedback();

	SetUpQuestions();
	ClearTextBoxes();
	CreateStatusArray();



//Check search string for q parameter
	if (document.location.search.length > 0){
		if (ShuffleQs == false){
			var JumpTo = parseInt(document.location.search.substring(1,document.location.search.length))-1;
			if (JumpTo <= QsToShow){
				ChangeQ(JumpTo);
			}
		}
	}
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
}

function ShowHideQuestions(){
	FuncBtnOut(document.getElementById('ShowMethodButton'));
	document.getElementById('ShowMethodButton').style.display = 'none';
	if (ShowingAllQuestions == false){
		for (var i=0; i<QArray.length; i++){
				QArray[i].style.display = '';
			}
		document.getElementById('Questions').style.listStyleType = 'decimal';
		document.getElementById('OneByOneReadout').style.display = 'none';
		document.getElementById('ShowMethodButton').innerHTML = ShowOneByOneCaption;
		ShowingAllQuestions = true;
	}
	else{
		for (var i=0; i<QArray.length; i++){
				if (i != CurrQNum){
					QArray[i].style.display = 'none';
				}
			}
		document.getElementById('Questions').style.listStyleType = 'none';
		document.getElementById('OneByOneReadout').style.display = '';
		document.getElementById('ShowMethodButton').innerHTML = ShowAllQuestionsCaption;
		ShowingAllQuestions = false;
	}
	document.getElementById('ShowMethodButton').style.display = 'inline';
}

function CreateStatusArray(){
	var QNum, ANum;
//For each item in the item array
	for (QNum=0; QNum<I.length; QNum++){
//Check if the question still exists (hasn't been nuked by showing a random selection)
		if (document.getElementById('Q_' + QNum) != null){
			State[QNum] = new Array();
			State[QNum][0] = -1; //Score for this q; -1 shows question not done yet
			State[QNum][1] = new Array(); //answers
			for (ANum = 0; ANum<I[QNum][3].length; ANum++){
				State[QNum][1][ANum] = 0; //answer not chosen yet; when chosen, will store its position in the series of choices
			}
			State[QNum][2] = 0; //tries at this q so far
			State[QNum][3] = 0; //incrementing percent-correct values of selected answers
			State[QNum][4] = 0; //penalties incurred for hints
			State[QNum][5] = ''; //Sequence of answers chosen by number
		}
		else{
			State[QNum] = null;
		}
	}
}



function CheckMCAnswer(QNum, ANum, Btn){
//if question doesn't exist, bail
	if (State[QNum].length < 1){return;}

//Get the feedback
	Feedback = I[QNum][3][ANum][1];

//Now show feedback and bail if question already complete
	if (State[QNum][0] > -1){
//Add an extra message explaining that the question
// is finished if defined by the user
		if (strQuestionFinished.length > 0){Feedback += '<br />' + strQuestionFinished;}
//Show the feedback
		ShowMessage(Feedback);
//New for 6.2.2.1: If you want to mark an answer as correct even when it's the final choice, uncomment this line.
//		if (I[QNum][3][ANum][2] >= 1){Btn.innerHTML = CorrectIndicator;}else{Btn.innerHTML = IncorrectIndicator;}
		return;
	}

//Hide the button while processing
	Btn.style.display = 'none';

//Increment the number of tries
	State[QNum][2]++;

//Add the percent-correct value of this answer
	State[QNum][3] += I[QNum][3][ANum][3];

//Store the try number in the answer part of the State array, for tracking purposes
	State[QNum][1][ANum] = State[QNum][2];
	if (State[QNum][5].length > 0){State[QNum][5] += ' | ';}
	State[QNum][5] += String.fromCharCode(65+ANum);

//Should this answer be accepted as correct?
	if (I[QNum][3][ANum][2] < 1){
//It's wrong

//Mark the answer
		Btn.innerHTML = IncorrectIndicator;

//Remove any previous score unless exercise is finished (6.0.3.8+)
		if (Finished == false){
			WriteToInstructions(strInstructions);
		}

//Check whether this leaves just one MC answer unselected, in which case the Q is terminated
		var RemainingAnswer = FinalAnswer(QNum);
		if (RemainingAnswer > -1){
//Behave as if the last answer had been selected, but give no credit for it
//Increment the number of tries
			State[QNum][2]++;

//Calculate the score for this question
			CalculateMCQuestionScore(QNum);

//Get the overall score and add it to the feedback
			CalculateOverallScore();
//New for 6.2.2.1
			var QsDone = CheckQuestionsCompleted();
			if ((ContinuousScoring == true)||(Finished == true)){
				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
			else{
				WriteToInstructions(QsDone);
			}
		}
	}
	else{
//It's right
//Mark the answer
		Btn.innerHTML = CorrectIndicator;

//Calculate the score for this question
		CalculateMCQuestionScore(QNum);

//New for 6.2.2.0
		var QsDone = CheckQuestionsCompleted();

//Get the overall score and add it to the feedback
		if (ContinuousScoring == true){
			CalculateOverallScore();
			if ((ContinuousScoring == true)||(Finished == true)){
				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
		}
		else{
			WriteToInstructions(QsDone);
		}
	}

//Show the button again
	Btn.style.display = 'inline';

//Finally, show the feedback
	ShowMessage(Feedback);

//Check whether all questions are now done
	CheckFinished();
}

function CalculateMCQuestionScore(QNum){
	var Tries = State[QNum][2] + State[QNum][4]; //include tries and hint penalties
	var PercentCorrect = State[QNum][3];
	var TotAns = GetTotalMCAnswers(QNum);
	var HintPenalties = State[QNum][4];

//Make sure it's not already complete

	if (State[QNum][0] < 0){
//Allow for Hybrids
		if (HintPenalties >= 1){
			State[QNum][0] = 0;
		}
		else{
//This line calculates the score for this question
			if (TotAns == 1){
				State[QNum][0] = 1;
			}
			else{
				State[QNum][0] = ((TotAns-((Tries*100)/State[QNum][3]))/(TotAns-1));
			}
		}
//Fix for Safari bug added for version 6.0.3.42 (negative infinity problem)
		if ((State[QNum][0] < 0)||(State[QNum][0] == Number.NEGATIVE_INFINITY)){
			State[QNum][0] = 0;
		}
	}
}

function GetTotalMCAnswers(QNum){
	var Result = 0;
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
			Result++;
		}
	}
	return Result;
}

function FinalAnswer(QNum){
	var UnchosenAnswers = 0;
	var FinalAnswer = -1;
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
			if (State[QNum][1][ANum] < 1){ //This answer hasn't been chosen yet
				UnchosenAnswers++;
				FinalAnswer = ANum;
			}
		}
	}
	if (UnchosenAnswers == 1){
		return FinalAnswer;
	}
	else{
		return -1;
	}
}





function CheckMultiSelAnswer(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}

//Increment the tries for this question
	State[QNum][2]++;

	var ShouldBeChecked;
	var Matches = 0;
	if (State[QNum][5].length > 0){State[QNum][5] += ' | ';}

//Check if there are any mismatches
	Feedback = '';
	var CheckBox = null;
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		CheckBox = document.getElementById('Q_' + QNum + '_' + ANum + '_Chk');
		if (CheckBox.checked == true){
			State[QNum][5] += 'Y';
		}
		else{
			State[QNum][5] += 'N';
		}
		ShouldBeChecked = (I[QNum][3][ANum][2] == 1);
		if (ShouldBeChecked == CheckBox.checked){
			Matches++;
		}
		else{
			Feedback = I[QNum][3][ANum][1];
		}
	}
//Add the hit readout
	Feedback = Matches + ' / ' + I[QNum][3].length + '<br />' + Feedback;
	if (Matches == I[QNum][3].length){
//It's right
		CalculateMultiSelQuestionScore(QNum);

//New for 6.2.2.0
		var QsDone = CheckQuestionsCompleted();

		if (ContinuousScoring == true){
			CalculateOverallScore();
			if ((ContinuousScoring == true)||(Finished == true)){
				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
			else{
				WriteToInstructions(QsDone);
			}
		}
	}
	else{
//It's wrong -- Remove any previous score unless exercise is finished (6.0.3.8+)
		if (Finished == false){
			WriteToInstructions(strInstructions);
		}
	}

//Show the feedback
	ShowMessage(Feedback);

//Check whether all questions are now done
	CheckFinished();
}

function CalculateMultiSelQuestionScore(QNum){
	var Tries = State[QNum][2];
	var TotAns = State[QNum][1].length;

//Make sure it's not already complete
	if (State[QNum][0] < 0){
		State[QNum][0] = (TotAns - (Tries-1)) / TotAns;
		if (State[QNum][0] < 0){
			State[QNum][0] = 0;
		}
	}
}



function CalculateOverallScore(){
	var TotalWeighting = 0;
	var TotalScore = 0;

	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] > -1){
				TotalWeighting += I[QNum][0];
				TotalScore += (I[QNum][0] * State[QNum][0]);
			}
		}
	}
	if (TotalWeighting > 0){
		Score = Math.floor((TotalScore/TotalWeighting)*100);
	}
	else{
//if TotalWeighting is 0, no questions so far have any value, so
//no penalty should be shown.
		Score = 100;
	}
}

//New for 6.2.2.0
function CheckQuestionsCompleted(){
	if (ShowCompletedSoFar == false){return '';}
	var QsCompleted = 0;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] >= 0){
				QsCompleted++;
			}
		}
	}
//Fixes for 6.2.2.2
	if (QsCompleted >= QArray.length){
		return ExerciseCompleted;
	}
	else{
		return CompletedSoFar + ' ' + QsCompleted + '/' + QArray.length + '.';
	}
}

function CheckFinished(){
	var FB = '';
	var AllDone = true;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] < 0){
				AllDone = false;
			}
		}
	}
	if (AllDone == true){

//Report final score and submit if necessary
		CalculateOverallScore();
		FB = YourScoreIs + ' ' + Score + '%.';
		if (ShowCorrectFirstTime == true){
			var CFT = 0;
			for (QNum=0; QNum<State.length; QNum++){
				if (State[QNum] != null){
					if (State[QNum][0] >= 1){
						CFT++;
					}
				}
			}
			FB += '<br />' + CorrectFirstTime + ' ' + CFT + '/' + QsToShow;
		}

//New for 6.2.2.0
		FB += '<br />' + ExerciseCompleted;

		WriteToInstructions(FB);

		Finished == true;



		if (TimeOver == true){
			SetScormTimedOut();
		}
		else{
			SetScormComplete();
		}


		TimeOver = true;
		Locked = true;



		Finished = true;
		Detail = '<?xml version="1.0"?><hpnetresult><fields>';
		for (QNum=0; QNum<State.length; QNum++){
			if (State[QNum] != null){
				if (State[QNum][5].length > 0){
					Detail += '<field><fieldname>Question #' + (QNum+1) + '</fieldname><fieldtype>question-tracking</fieldtype><fieldlabel>Q ' + (QNum+1) + '</fieldlabel><fieldlabelid>QuestionTrackingField</fieldlabelid><fielddata>' + State[QNum][5] + '</fielddata></field>';
				}
			}
		}
		Detail += '</fields></hpnetresult>';
		setTimeout('Finish()', SubmissionTimeout);
	}

	else{
		SetScormIncomplete();
	}

}





//CORE CODE FOR CHECKING SHORT ANSWER GUESSES AGAINST ANSWER ARRAYS

var CaseSensitive = false;
var ShowAlsoCorrect = true;
var PleaseEnter = 'Por favor, introduce una respuesta';
var HybridTries = 2;
var PartlyIncorrect = 'Tu respuesta es parcialmente correcta: ';
var CorrectList = 'Respuestas correctas: ';
var NextCorrect = 'La siguiente letra correcta es:';
var CurrBox = null;

function TrackFocus(BoxID){
	InTextBox = true;
	CurrBox = document.getElementById(BoxID);
}

function LeaveGap(){
	InTextBox = false;
}

function TypeChars(Chars){
	if (CurrBox != null){
//Following check added for 6.0.4.4 to avoid error message in IE6
		if (CurrBox.style.display != 'none'){
			CurrBox.value += Chars;
			CurrBox.focus();
		}
	}
}

function CheckGuess(Guess, Answer, CaseSensitive, PercentCorrect, Feedback){
	this.Guess = Guess;
	this.Answer = Answer;
	this.PercentCorrect = PercentCorrect;
	this.Feedback = Feedback;
	if (CaseSensitive == false){
		this.WorkingGuess = Guess.toLowerCase();
		this.WorkingAnswer = Answer.toLowerCase();
	}
	else{
		this.WorkingGuess = Guess;
		this.WorkingAnswer = Answer;
	}
	this.Hint = '';
	this.HintPenalty = 1/Answer.length;
	this.CorrectStart = '';
	this.WrongMiddle = '';
	this.CorrectEnd = '';
	this.PercentMatch = 0;
	this.DoCheck();
}

function CheckGuess_DoCheck(){
//Check if it's an exact match
	if (this.WorkingAnswer == this.WorkingGuess){
		this.PercentMatch = 100;
		this.CorrectStart = this.Guess;
	return;
	}
//Figure out how much of the beginning is correct
	var i = 0;
	var CorrectChars = 0;
	while (this.WorkingAnswer.charAt(i) == this.WorkingGuess.charAt(i)){
		i++;
		CorrectChars++;
	}
//Stash the hint
	this.Hint = this.Answer.charAt(i);

	this.CorrectStart = this.Guess.substring(0, i);

//If there's more to the answer, look at the rest of it
	if (i<this.Guess.length){

//Figure out how much of the end is correct
		var j = this.WorkingGuess.length-1;
		var k = this.WorkingAnswer.length-1;
		while ((j>=i)&&((this.WorkingAnswer.charAt(k) == this.WorkingGuess.charAt(j))&&(CorrectChars < this.Answer.length))){
			CorrectChars++;
			j--;
			k--;
		}
		this.CorrectEnd = this.Guess.substring(j+1, this.Guess.length);
		this.WrongMiddle = this.Guess.substring(i, j+1);
	}
	if (TrimString(this.WrongMiddle).length < 1){this.WrongMiddle = '_';}
//Calculate match score based on how much of the guess is correct
	if (CorrectChars < this.Answer.length){
		this.PercentMatch = Math.floor(100*CorrectChars)/this.Answer.length;
	}
	else{
		this.PercentMatch = Math.floor((100 * CorrectChars)/this.Guess.length);
	}
}

CheckGuess.prototype.DoCheck = CheckGuess_DoCheck;

function CheckAnswerArray(CaseSensitive){
	this.CaseSensitive = CaseSensitive;
	this.Answers = new Array();
	this.Score = 0;
	this.Feedback = '';
	this.Hint = '';
	this.HintPenalty = 0;
	this.MatchedAnswerLength = 1;
	this.CompleteMatch = false;
	this.MatchNum = -1;
}

function CheckAnswerArray_AddAnswer(Guess, Answer, PercentCorrect, Feedback){
	this.Answers.push(new CheckGuess(Guess, Answer, this.CaseSensitive, PercentCorrect, Feedback));
}

CheckAnswerArray.prototype.AddAnswer = CheckAnswerArray_AddAnswer;

function CheckAnswerArray_ClearAll(){
	this.Answers.length = 0;
}

CheckAnswerArray.prototype.ClearAll = CheckAnswerArray_ClearAll;

function CheckAnswerArray_GetBestMatch(){
//First check for a 100% match
	for (var i=0; i<this.Answers.length; i++){
		if (this.Answers[i].PercentMatch == 100){
			this.Feedback = this.Answers[i].Feedback;
			this.Score = this.Answers[i].PercentCorrect;
			this.CompleteMatch = true;
			this.MatchNum = i;
			return;
		}
	}
//Now check for the best alternative match
	var PercentMatch = 0;
	var BestMatch = -1;
	for (i=0; i<this.Answers.length; i++){
		if ((this.Answers[i].PercentMatch > PercentMatch)&&(this.Answers[i].PercentCorrect == 100)){
			BestMatch = i;
			PercentMatch = this.Answers[i].PercentMatch;
		}
	}
	if (BestMatch > -1){
		this.Score = this.Answers[BestMatch].PercentMatch;
		this.Feedback = PartlyIncorrect + ' ';
		this.Feedback += '<span class="PartialAnswer">' + this.Answers[BestMatch].CorrectStart;
		this.Feedback += '<span class="Highlight">' + this.Answers[BestMatch].WrongMiddle + '</span>';
		this.Feedback += this.Answers[BestMatch].CorrectEnd + '</span>';
		this.Hint = '<span class="PartialAnswer">' + this.Answers[BestMatch].CorrectStart;
		this.Hint += '<span class="Highlight">' + this.Answers[BestMatch].Hint + '</span></span>';
		this.HintPenalty = this.Answers[BestMatch].HintPenalty;
	}
	else{
		this.Score = 0;
		this.Feedback = '';
	}
}

CheckAnswerArray.prototype.GetBestMatch = CheckAnswerArray_GetBestMatch;

function CheckShortAnswer(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}

//bail if question already complete
	if (State[QNum][0] > -1){return;}

//Get the guess (TrimString added to fix bug for 6.0.4.3)
	var G = TrimString(document.getElementById('Q_' + QNum + '_Guess').value);

//If no guess, bail with message; no penalty
	if (G.length < 1){
		ShowMessage(PleaseEnter);
		return;
	}

//Increment tries
	State[QNum][2]++;

//Create a check object
	var CA = new CheckAnswerArray(CaseSensitive);

	CA.ClearAll();
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		CA.AddAnswer(G, I[QNum][3][ANum][0], I[QNum][3][ANum][3], I[QNum][3][ANum][1]);
	}
	CA.GetBestMatch();

//Store any match in the state tracking field
	if (State[QNum][5].length > 0){State[QNum][5] += ' | ';}
	if (CA.MatchNum > -1){
		State[QNum][5] += String.fromCharCode(65+CA.MatchNum);
	}
//Else store the student's answer
	else{
		State[QNum][5] += G;
	}

//Add the percent correct value for this answer to the Q State (works for all
//situations, wrong or right)
	State[QNum][3] += CA.Score;

//Now branch, based on the nature of the match
//Is it a complete match?
	if (CA.CompleteMatch == true){

//Is it with a wrong answer, or a right answer?
		if (CA.Score == 100){
//It's right
			CalculateShortAnsQuestionScore(QNum);

//New for 6.2.2.0
			var QsDone = CheckQuestionsCompleted();

//Get correct answer list if required, assuming there are any other correct alternatives
			if (ShowAlsoCorrect == true){
				var AlsoCorrectList = GetCorrectList(QNum, G, false);
				if (AlsoCorrectList.length > 0){
					CA.Feedback += '<br />' + CorrectList + '<br />' + AlsoCorrectList;
				}
			}

//Get the overall score and add it to the feedback
			if (ContinuousScoring == true){
				CalculateOverallScore();
				CA.Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
			else{
				WriteToInstructions(QsDone);
			}
			ShowMessage(CA.Feedback);
//Put the answer in
			ReplaceGuessBox(QNum, G);
			CheckFinished();
			return;
		}
	}

//Otherwise, it's a match to a predicted wrong/partially correct, or a partial
//match to a right answer
	if (CA.Feedback.length < 1){CA.Feedback = DefaultWrong;}
//Remove any previous score unless exercise is finished (6.0.3.8+)
	if (Finished == false){
		WriteToInstructions(strInstructions);
	}
	ShowMessage(CA.Feedback);

//If necessary, switch a hybrid question to m/c
	if (State[QNum][2] >= HybridTries){
		SwitchHybridDisplay(QNum);
	}
}

function CalculateShortAnsQuestionScore(QNum){
	var Tries = State[QNum][2] + State[QNum][4]; //include tries and hint penalties;
	var PercentCorrect = State[QNum][3];
	var HintPenalties = State[QNum][4];

//Make sure it's not already complete
	if (State[QNum][0] < 0){
		if (HintPenalties >= 1){
			State[QNum][0] = 0;
		}
		else{
			State[QNum][0] = (PercentCorrect/(100*Tries));
		}
		if (State[QNum][0] < 0){
			State[QNum][0] = 0;
		}
	}
}

function SwitchHybridDisplay(QNum){
	if (document.getElementById('Q_' + QNum + '_Hybrid_MC') != null){
		document.getElementById('Q_' + QNum + '_Hybrid_MC').style.display = '';
		if (document.getElementById('Q_' + QNum + '_SA') != null){
			document.getElementById('Q_' + QNum + '_SA').style.display = 'none';
		}
	}
}

function GetCorrectArray(QNum){
	var Result = new Array();
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][2] == 1){ //This is an acceptable correct answer
			Result.push(I[QNum][3][ANum][0]);
		}
	}
	return Result;
}

function GetCorrectList(QNum, Answer, IncludeAnswer){
	var As = GetCorrectArray(QNum);
	var Result = '';
	for (var ANum=0; ANum<As.length; ANum++){
		if ((IncludeAnswer == true)||(As[ANum] != Answer)){
			Result += As[ANum] + '<br />';
		}
	}
	return Result;
}

function GetFirstCorrectAnswer(QNum){
	var As = GetCorrectArray(QNum);
	if (As.length > 0){
		return As[0];
	}
	else{
		return '';
	}
}

function ReplaceGuessBox(QNum, Ans){
	if (document.getElementById('Q_' + QNum + '_SA') != null){
		var El = document.getElementById('Q_' + QNum + '_SA');
		while (El.childNodes.length > 0){
			El.removeChild(El.childNodes[0]);
		}
		var A = document.createElement('span');
		A.setAttribute('class', 'Answer');
		var T = document.createTextNode(Ans);
		A.appendChild(T);
		El.appendChild(A);
	}
}



function ShowAnswers(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}

//Get the answer list to display
	var Ans = GetCorrectList(QNum, '', false);
	Ans = CorrectList + '<br />' + Ans;

//Display feedback
	ShowMessage(Ans);

//Set the score for this question to 0 if no score yet
	if (State[QNum][0] < 1){
		State[QNum][0] = 0;
	}

//Get the first correct answer
	var FirstAns = GetFirstCorrectAnswer(QNum);

//Replace the textbox
	ReplaceGuessBox(QNum, FirstAns);

//New for 6.2.2.0: Get scores and feedback
	var QsDone = CheckQuestionsCompleted();

	if (ContinuousScoring == true){
		CalculateOverallScore();
		WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
	}

//This may be the last, so check finished status
	CheckFinished();
}





function ShowHint(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}

//bail if question already complete
	if (State[QNum][0] > -1){return;}

//Get the guess
	var G = document.getElementById('Q_' + QNum + '_Guess').value;

//If no guess, give the first correct bit
	if (G.length < 1){
		var Ans = GetFirstCorrectAnswer(QNum);
		var Hint = Ans.charAt(0);
		ShowMessage(NextCorrect + '<br />' + Hint);
//Penalty for hint
		State[QNum][4] += (1/Ans.length);
		return;
	}

//Increment tries
	State[QNum][2]++;

//Create a check object
	var CA = new CheckAnswerArray(CaseSensitive);

	CA.ClearAll();
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
//Use only correct answers
		if (I[QNum][3][ANum][2] == 1){
			CA.AddAnswer(G, I[QNum][3][ANum][0], I[QNum][3][ANum][3], I[QNum][3][ANum][1]);
		}
	}
	CA.GetBestMatch();
	if (CA.CompleteMatch == true){
//It's right!
		CheckShortAnswer(QNum);
		return;
	}
	else{
		if (CA.Hint.length > 0){
			ShowMessage(NextCorrect + '<br />' + CA.Hint);
			State[QNum][4] += CA.HintPenalty;
		}
		else{
			ShowMessage(DefaultWrong + '<br />' + NextCorrect + '<br />' + GetFirstCorrectAnswer(QNum).charAt(0));
		}
	}
}









//-->

//]]>

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_findObj(n, d) { //v4.01
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && d.getElementById) x=d.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function MM_openBrWindow(theURL,winName,features) { //v2.0
  window.open(theURL,winName,features);
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_findObj(n, d) { //v4.01
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && d.getElementById) x=d.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_findObj(n, d) { //v4.01
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && d.getElementById) x=d.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}
//-->
</script>

<script type='text/javascript' src='lib/descartes-min.js'></script>
</head>

<body onload="StartUp();MM_preloadImages('imagen3/calculadora2.png','imagen3/atrasb.png','imagen3/adelanteb.png')" id="TheBody" onunload="CheckLMSFinish()">

<!-- BeginTopNavButtons -->



<!-- EndTopNavButtons -->
    <table width="100%" border="0" cellpadding="0" cellspacing="0">
      <tr>
        <td width="91%">
    	  <ajs name="enlace_ionico" width=100 height=70
        code="Descartes.class"
        codebase="./"
        archive="lib/Descartes5.jar"
        MAYSCRIPT>
   <param name="tama&ntilde;o" value="100x70">
   <param name="decimal_symbol" value=",">
   <param name="antialias" value="s&iacute;">
   <param name="nombre" value="enlace_ionico">
   <param name="Versi&oacute;n" value="5.107, 2013-08-17">
   <param name="Idioma" value="espa&ntilde;ol">
   <param name="Botones" value="cr&eacute;ditos=no config=no inicio=no limpiar=no alto=0">
   <param name="E_01" value="tipo='R3' id='E4' x='0' ancho='100' O.y='10' despl_imagen='arr-izq' fondo='f0f0f0' R3='s&iacute;'">
   <param name="A_01" value="id='escala_g' constante='s&iacute;' expresi&oacute;n='.1' evaluar='una-sola-vez'">
   <param name="A_02" value="id='e_g' constante='s&iacute;' expresi&oacute;n='escala_g' evaluar='una-sola-vez'">
   <param name="A_03" value="id='x_g' vector='s&iacute;' evaluar='una-sola-vez' tama&ntilde;o='27' archivo='escenas/nacl_x.txt'">
   <param name="A_04" value="id='y_g' vector='s&iacute;' evaluar='una-sola-vez' tama&ntilde;o='27' archivo='escenas/nacl_y.txt'">
   <param name="A_05" value="id='z_g' vector='s&iacute;' evaluar='una-sola-vez' tama&ntilde;o='27' archivo='escenas/nacl_z.txt'">
   <param name="S_01" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[0]*e_g,y_g[0]*e_g,z_g[0]*e_g)' rotini='(0,0,E4.rot.z)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_02" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[1]*e_g,y_g[1]*e_g,z_g[1]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_03" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[2]*e_g,y_g[2]*e_g,z_g[2]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_04" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[3]*e_g,y_g[3]*e_g,z_g[3]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_05" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[4]*e_g,y_g[4]*e_g,z_g[4]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_06" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[5]*e_g,y_g[5]*e_g,z_g[5]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_07" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[6]*e_g,y_g[6]*e_g,z_g[6]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_08" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[7]*e_g,y_g[7]*e_g,z_g[7]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_09" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_10" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_11" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_12" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_13" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_14" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='azul' expresi&oacute;n='(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='6'">
   <param name="S_15" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_16" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[15]*e_g,y_g[15]*e_g,z_g[15]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_17" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[16]*e_g,y_g[16]*e_g,z_g[16]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_18" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[17]*e_g,y_g[17]*e_g,z_g[17]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_19" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[18]*e_g,y_g[18]*e_g,z_g[18]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_20" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[19]*e_g,y_g[19]*e_g,z_g[19]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_21" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[20]*e_g,y_g[20]*e_g,z_g[20]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_22" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[21]*e_g,y_g[21]*e_g,z_g[21]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_23" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[22]*e_g,y_g[22]*e_g,z_g[22]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_24" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[23]*e_g,y_g[23]*e_g,z_g[23]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_25" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[24]*e_g,y_g[24]*e_g,z_g[24]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_26" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[25]*e_g,y_g[25]*e_g,z_g[25]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_27" value="espacio='E4' tipo='punto' fondo='s&iacute;' color='negro' color_reverso='rojo' expresi&oacute;n='(x_g[26]*e_g,y_g[26]*e_g,z_g[26]*e_g)' rotini='(0,0,-25)' fuente='Monospaced,PLAIN,12' fijo='s&iacute;' ancho='4'">
   <param name="S_28" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[0]*e_g,y_g[0]*e_g,z_g[0]*e_g)(x_g[15]*e_g,y_g[15]*e_g,z_g[15]*e_g)' rotini='(0,0,-25)'">
   <param name="S_29" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[1]*e_g,y_g[1]*e_g,z_g[1]*e_g)(x_g[16]*e_g,y_g[16]*e_g,z_g[16]*e_g)' rotini='(0,0,-25)'">
   <param name="S_30" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[2]*e_g,y_g[2]*e_g,z_g[2]*e_g)(x_g[17]*e_g,y_g[17]*e_g,z_g[17]*e_g)' rotini='(0,0,-25)'">
   <param name="S_31" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[3]*e_g,y_g[3]*e_g,z_g[3]*e_g)(x_g[18]*e_g,y_g[18]*e_g,z_g[18]*e_g)' rotini='(0,0,-25)'">
   <param name="S_32" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[4]*e_g,y_g[4]*e_g,z_g[4]*e_g)(x_g[15]*e_g,y_g[15]*e_g,z_g[15]*e_g)' rotini='(0,0,-25)'">
   <param name="S_33" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[5]*e_g,y_g[5]*e_g,z_g[5]*e_g)(x_g[16]*e_g,y_g[16]*e_g,z_g[16]*e_g)' rotini='(0,0,-25)'">
   <param name="S_34" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[6]*e_g,y_g[6]*e_g,z_g[6]*e_g)(x_g[17]*e_g,y_g[17]*e_g,z_g[17]*e_g)' rotini='(0,0,-25)'">
   <param name="S_35" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[7]*e_g,y_g[7]*e_g,z_g[7]*e_g)(x_g[18]*e_g,y_g[18]*e_g,z_g[18]*e_g)' rotini='(0,0,-25)'">
   <param name="S_36" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)' rotini='(0,0,-25)'">
   <param name="S_37" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)' rotini='(0,0,-25)'">
   <param name="S_38" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)' rotini='(0,0,-25)'">
   <param name="S_39" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)' rotini='(0,0,-25)'">
   <param name="S_40" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[0]*e_g,y_g[0]*e_g,z_g[0]*e_g)(x_g[19]*e_g,y_g[19]*e_g,z_g[19]*e_g)' rotini='(0,0,-25)'">
   <param name="S_41" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[1]*e_g,y_g[1]*e_g,z_g[1]*e_g)(x_g[20]*e_g,y_g[20]*e_g,z_g[20]*e_g)' rotini='(0,0,-25)'">
   <param name="S_42" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[2]*e_g,y_g[2]*e_g,z_g[2]*e_g)(x_g[19]*e_g,y_g[19]*e_g,z_g[19]*e_g)' rotini='(0,0,-25)'">
   <param name="S_43" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[3]*e_g,y_g[3]*e_g,z_g[3]*e_g)(x_g[20]*e_g,y_g[20]*e_g,z_g[20]*e_g)' rotini='(0,0,-25)'">
   <param name="S_44" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[4]*e_g,y_g[4]*e_g,z_g[4]*e_g)(x_g[21]*e_g,y_g[21]*e_g,z_g[21]*e_g)' rotini='(0,0,-25)'">
   <param name="S_45" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[5]*e_g,y_g[5]*e_g,z_g[5]*e_g)(x_g[22]*e_g,y_g[22]*e_g,z_g[22]*e_g)' rotini='(0,0,-25)'">
   <param name="S_46" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[6]*e_g,y_g[6]*e_g,z_g[6]*e_g)(x_g[21]*e_g,y_g[21]*e_g,z_g[21]*e_g)' rotini='(0,0,-25)'">
   <param name="S_47" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[7]*e_g,y_g[7]*e_g,z_g[7]*e_g)(x_g[22]*e_g,y_g[22]*e_g,z_g[22]*e_g)' rotini='(0,0,-25)'">
   <param name="S_48" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)(x_g[19]*e_g,y_g[19]*e_g,z_g[19]*e_g)' rotini='(0,0,-25)'">
   <param name="S_49" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)(x_g[21]*e_g,y_g[21]*e_g,z_g[21]*e_g)' rotini='(0,0,-25)'">
   <param name="S_50" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)(x_g[15]*e_g,y_g[15]*e_g,z_g[15]*e_g)' rotini='(0,0,-25)'">
   <param name="S_51" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)(x_g[17]*e_g,y_g[17]*e_g,z_g[17]*e_g)' rotini='(0,0,-25)'">
   <param name="S_52" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)(x_g[15]*e_g,y_g[15]*e_g,z_g[15]*e_g)' rotini='(0,0,-25)'">
   <param name="S_53" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)(x_g[16]*e_g,y_g[16]*e_g,z_g[16]*e_g)' rotini='(0,0,-25)'">
   <param name="S_54" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)' rotini='(0,0,-25)'">
   <param name="S_55" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[15]*e_g,y_g[15]*e_g,z_g[15]*e_g)(x_g[4]*e_g,y_g[4]*e_g,z_g[4]*e_g)' rotini='(0,0,-25)'">
   <param name="S_56" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[16]*e_g,y_g[16]*e_g,z_g[16]*e_g)(x_g[5]*e_g,y_g[5]*e_g,z_g[5]*e_g)' rotini='(0,0,-25)'">
   <param name="S_57" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[17]*e_g,y_g[17]*e_g,z_g[17]*e_g)(x_g[6]*e_g,y_g[6]*e_g,z_g[6]*e_g)' rotini='(0,0,-25)'">
   <param name="S_58" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[18]*e_g,y_g[18]*e_g,z_g[18]*e_g)(x_g[7]*e_g,y_g[7]*e_g,z_g[7]*e_g)' rotini='(0,0,-25)'">
   <param name="S_59" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[19]*e_g,y_g[19]*e_g,z_g[19]*e_g)(x_g[2]*e_g,y_g[2]*e_g,z_g[2]*e_g)' rotini='(0,0,-25)'">
   <param name="S_60" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[20]*e_g,y_g[20]*e_g,z_g[20]*e_g)(x_g[3]*e_g,y_g[3]*e_g,z_g[3]*e_g)' rotini='(0,0,-25)'">
   <param name="S_61" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[21]*e_g,y_g[21]*e_g,z_g[21]*e_g)(x_g[6]*e_g,y_g[6]*e_g,z_g[6]*e_g)' rotini='(0,0,-25)'">
   <param name="S_62" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[22]*e_g,y_g[22]*e_g,z_g[22]*e_g)(x_g[7]*e_g,y_g[7]*e_g,z_g[7]*e_g)' rotini='(0,0,-25)'">
   <param name="S_63" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[23]*e_g,y_g[23]*e_g,z_g[23]*e_g)(x_g[1]*e_g,y_g[1]*e_g,z_g[1]*e_g)' rotini='(0,0,-25)'">
   <param name="S_64" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[24]*e_g,y_g[24]*e_g,z_g[24]*e_g)(x_g[3]*e_g,y_g[3]*e_g,z_g[3]*e_g)' rotini='(0,0,-25)'">
   <param name="S_65" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[25]*e_g,y_g[25]*e_g,z_g[25]*e_g)(x_g[5]*e_g,y_g[5]*e_g,z_g[5]*e_g)' rotini='(0,0,-25)'">
   <param name="S_66" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[26]*e_g,y_g[26]*e_g,z_g[26]*e_g)(x_g[6]*e_g,y_g[6]*e_g,z_g[6]*e_g)' rotini='(0,0,-25)'">
   <param name="S_67" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[26]*e_g,y_g[26]*e_g,z_g[26]*e_g)(x_g[7]*e_g,y_g[7]*e_g,z_g[7]*e_g)' rotini='(0,0,-25)'">
   <param name="S_68" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[0]*e_g,y_g[0]*e_g,z_g[0]*e_g)(x_g[23]*e_g,y_g[23]*e_g,z_g[23]*e_g)' rotini='(0,0,-25)'">
   <param name="S_69" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[1]*e_g,y_g[1]*e_g,z_g[1]*e_g)(x_g[23]*e_g,y_g[23]*e_g,z_g[23]*e_g)' rotini='(0,0,-25)'">
   <param name="S_70" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[2]*e_g,y_g[2]*e_g,z_g[2]*e_g)(x_g[24]*e_g,y_g[24]*e_g,z_g[24]*e_g)' rotini='(0,0,-25)'">
   <param name="S_71" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[3]*e_g,y_g[3]*e_g,z_g[3]*e_g)(x_g[24]*e_g,y_g[24]*e_g,z_g[24]*e_g)' rotini='(0,0,-25)'">
   <param name="S_72" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[4]*e_g,y_g[4]*e_g,z_g[4]*e_g)(x_g[25]*e_g,y_g[25]*e_g,z_g[25]*e_g)' rotini='(0,0,-25)'">
   <param name="S_73" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[5]*e_g,y_g[5]*e_g,z_g[5]*e_g)(x_g[25]*e_g,y_g[25]*e_g,z_g[25]*e_g)' rotini='(0,0,-25)'">
   <param name="S_74" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[6]*e_g,y_g[6]*e_g,z_g[6]*e_g)(x_g[26]*e_g,y_g[26]*e_g,z_g[26]*e_g)' rotini='(0,0,-25)'">
   <param name="S_75" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[7]*e_g,y_g[7]*e_g,z_g[7]*e_g)(x_g[26]*e_g,y_g[26]*e_g,z_g[26]*e_g)' rotini='(0,0,-25)'">
   <param name="S_76" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)(x_g[20]*e_g,y_g[20]*e_g,z_g[20]*e_g)' rotini='(0,0,-25)'">
   <param name="S_77" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)(x_g[22]*e_g,y_g[22]*e_g,z_g[22]*e_g)' rotini='(0,0,-25)'">
   <param name="S_78" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)(x_g[16]*e_g,y_g[16]*e_g,z_g[16]*e_g)' rotini='(0,0,-25)'">
   <param name="S_79" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)(x_g[18]*e_g,y_g[18]*e_g,z_g[18]*e_g)' rotini='(0,0,-25)'">
   <param name="S_80" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)(x_g[17]*e_g,y_g[17]*e_g,z_g[17]*e_g)' rotini='(0,0,-25)'">
   <param name="S_81" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)(x_g[18]*e_g,y_g[18]*e_g,z_g[18]*e_g)' rotini='(0,0,-25)'">
   <param name="S_82" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)' rotini='(0,0,-25)'">
   <param name="S_83" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[15]*e_g,y_g[15]*e_g,z_g[15]*e_g)(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)' rotini='(0,0,-25)'">
   <param name="S_84" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[16]*e_g,y_g[16]*e_g,z_g[16]*e_g)(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)' rotini='(0,0,-25)'">
   <param name="S_85" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[17]*e_g,y_g[17]*e_g,z_g[17]*e_g)(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)' rotini='(0,0,-25)'">
   <param name="S_86" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[18]*e_g,y_g[18]*e_g,z_g[18]*e_g)(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)' rotini='(0,0,-25)'">
   <param name="S_87" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[19]*e_g,y_g[19]*e_g,z_g[19]*e_g)(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)' rotini='(0,0,-25)'">
   <param name="S_88" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[20]*e_g,y_g[20]*e_g,z_g[20]*e_g)(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)' rotini='(0,0,-25)'">
   <param name="S_89" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[21]*e_g,y_g[21]*e_g,z_g[21]*e_g)(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)' rotini='(0,0,-25)'">
   <param name="S_90" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[22]*e_g,y_g[22]*e_g,z_g[22]*e_g)(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)' rotini='(0,0,-25)'">
   <param name="S_91" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[23]*e_g,y_g[23]*e_g,z_g[23]*e_g)(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)' rotini='(0,0,-25)'">
   <param name="S_92" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[24]*e_g,y_g[24]*e_g,z_g[24]*e_g)(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)' rotini='(0,0,-25)'">
   <param name="S_93" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[25]*e_g,y_g[25]*e_g,z_g[25]*e_g)(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)' rotini='(0,0,-25)'">
   <param name="S_94" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[26]*e_g,y_g[26]*e_g,z_g[26]*e_g)(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)' rotini='(0,0,-25)'">
   <param name="S_95" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)(x_g[23]*e_g,y_g[23]*e_g,z_g[23]*e_g)' rotini='(0,0,-25)'">
   <param name="S_96" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)(x_g[25]*e_g,y_g[25]*e_g,z_g[25]*e_g)' rotini='(0,0,-25)'">
   <param name="S_97" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)(x_g[23]*e_g,y_g[23]*e_g,z_g[23]*e_g)' rotini='(0,0,-25)'">
   <param name="S_98" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)(x_g[24]*e_g,y_g[24]*e_g,z_g[24]*e_g)' rotini='(0,0,-25)'">
   <param name="S_99" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)(x_g[19]*e_g,y_g[19]*e_g,z_g[19]*e_g)' rotini='(0,0,-25)'">
   <param name="S_100" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)(x_g[20]*e_g,y_g[20]*e_g,z_g[20]*e_g)' rotini='(0,0,-25)'">
   <param name="S_101" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)' rotini='(0,0,-25)'">
   <param name="S_102" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[15]*e_g,y_g[15]*e_g,z_g[15]*e_g)(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)' rotini='(0,0,-25)'">
   <param name="S_103" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[16]*e_g,y_g[16]*e_g,z_g[16]*e_g)(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)' rotini='(0,0,-25)'">
   <param name="S_104" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[17]*e_g,y_g[17]*e_g,z_g[17]*e_g)(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)' rotini='(0,0,-25)'">
   <param name="S_105" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[18]*e_g,y_g[18]*e_g,z_g[18]*e_g)(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)' rotini='(0,0,-25)'">
   <param name="S_106" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[19]*e_g,y_g[19]*e_g,z_g[19]*e_g)(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)' rotini='(0,0,-25)'">
   <param name="S_107" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[20]*e_g,y_g[20]*e_g,z_g[20]*e_g)(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)' rotini='(0,0,-25)'">
   <param name="S_108" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[21]*e_g,y_g[21]*e_g,z_g[21]*e_g)(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)' rotini='(0,0,-25)'">
   <param name="S_109" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[22]*e_g,y_g[22]*e_g,z_g[22]*e_g)(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)' rotini='(0,0,-25)'">
   <param name="S_110" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[23]*e_g,y_g[23]*e_g,z_g[23]*e_g)(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)' rotini='(0,0,-25)'">
   <param name="S_111" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[24]*e_g,y_g[24]*e_g,z_g[24]*e_g)(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)' rotini='(0,0,-25)'">
   <param name="S_112" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[25]*e_g,y_g[25]*e_g,z_g[25]*e_g)(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)' rotini='(0,0,-25)'">
   <param name="S_113" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[26]*e_g,y_g[26]*e_g,z_g[26]*e_g)(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)' rotini='(0,0,-25)'">
   <param name="S_114" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[8]*e_g,y_g[8]*e_g,z_g[8]*e_g)(x_g[24]*e_g,y_g[24]*e_g,z_g[24]*e_g)' rotini='(0,0,-25)'">
   <param name="S_115" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[9]*e_g,y_g[9]*e_g,z_g[9]*e_g)(x_g[26]*e_g,y_g[26]*e_g,z_g[26]*e_g)' rotini='(0,0,-25)'">
   <param name="S_116" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[10]*e_g,y_g[10]*e_g,z_g[10]*e_g)(x_g[25]*e_g,y_g[25]*e_g,z_g[25]*e_g)' rotini='(0,0,-25)'">
   <param name="S_117" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[11]*e_g,y_g[11]*e_g,z_g[11]*e_g)(x_g[26]*e_g,y_g[26]*e_g,z_g[26]*e_g)' rotini='(0,0,-25)'">
   <param name="S_118" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)(x_g[21]*e_g,y_g[21]*e_g,z_g[21]*e_g)' rotini='(0,0,-25)'">
   <param name="S_119" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)(x_g[22]*e_g,y_g[22]*e_g,z_g[22]*e_g)' rotini='(0,0,-25)'">
   <param name="S_120" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)(x_g[12]*e_g,y_g[12]*e_g,z_g[12]*e_g)' rotini='(0,0,-25)'">
   <param name="S_121" value="espacio='E4' tipo='segmento' fondo='s&iacute;' color='gris' expresi&oacute;n='(x_g[14]*e_g,y_g[14]*e_g,z_g[14]*e_g)(x_g[13]*e_g,y_g[13]*e_g,z_g[13]*e_g)' rotini='(0,0,-25)'">
   <param name="Animaci&oacute;n" value="pausa='100' controles='no' auto='s&iacute;' inicio='p=0;t=0' hacer='p=p+1;p=(p&gt;90)?1:p;t=t+0.15;E4.rot.z=E4.rot.z+3' mientras='p&lt;100'">
</ajs>
</td>
        
      </tr>
    </table>
  

<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions">
	  <p align="center"> Escoge o escribe las respuestas correctas. No pases a la siguiente pregunta hasta que la respuesta no sea totalmente correcta.
          </p>
	</div>
</div>




<div id="MainDiv" class="StdDiv">

<div id="QNav" class="QuestionNavigation">



<div id="OneByOneReadout">
<button id="PrevQButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="ChangeQ(-1); return false;"><img src="imagen3/anterior.png" alt="atras.png" title="atr&#x00E1;s" width="23" height="23"></img></button>

<span id="QNumReadout" class="QNum">&nbsp;</span>

<button id="NextQButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="ChangeQ(1); return false;"><img src="imagen3/siguiente.png" alt="adelante.png" title="adelante" width="23" height="23"></img></button>
<br />
</div>

</div>

<ol class="QuizQuestions" id="Questions">
<li class="QuizQuestion" id="Q_0" style="display: none;"><div class="QuestionText">Es una sustancia formada por la uni&#x00F3;n de dos o m&#x00E1;s elementos en una raz&#x00F3;n fija y tiene una f&#x00F3;rmula qu&#x00ED;mica.</div><div class="ShortAnswer" id="Q_0_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_0_Guess" onfocus="TrackFocus('Q_0_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="9"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(0)">Comprobar</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(0)">Pista</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(0)">Muestra la respuesta</button></div></form></div></li>
<li class="QuizQuestion" id="Q_1" style="display: none;"><div class="QuestionText">El agua es un compuesto formado por hidr&#x00F3;geno y __________ en la raz&#x00F3;n de 2 a 1 (en n&#x00FA;mero de &#x00E1;tomos).</div><div class="ShortAnswer" id="Q_1_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_1_Guess" onfocus="TrackFocus('Q_1_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="9"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(1)">Comprobar</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(1)">Pista</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(1)">Muestra la respuesta</button></div></form></div></li>
<li class="QuizQuestion" id="Q_2" style="display: none;"><div class="QuestionText">Los elementos de un compuesto no se pueden separar por procesos f&#x00ED;sicos (decantaci&#x00F3;n, filtraci&#x00F3;n, destilaci&#x00F3;n, etc.), sino s&#x00F3;lo mediante procesos que llamamos:</div><div class="ShortAnswer" id="Q_2_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_2_Guess" onfocus="TrackFocus('Q_2_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="19"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(2)">Comprobar</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(2)">Pista</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(2)">Muestra la respuesta</button></div></form></div></li>
<li class="QuizQuestion" id="Q_3" style="display: none;"><div class="QuestionText">Los compuestos tienen propiedades f&#x00ED;sicas y qu&#x00ED;micas diferentes a las de sus elementos constituyentes. &#x00C9;ste es uno de los criterios principales para distinguir un compuesto de una </div><div class="ShortAnswer" id="Q_3_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_3_Guess" onfocus="TrackFocus('Q_3_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="9"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(3)">Comprobar</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(3)">Pista</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(3)">Muestra la respuesta</button></div></form></div></li>
<li class="QuizQuestion" id="Q_4" style="display: none;"><div class="QuestionText">Indica qu&#x00E9; afirmaciones son verdaderas</div><ol class="MSelAnswers"><li id="Q_4_0"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_4_0_Chk" class="MSelCheckbox" />Los compuestos tienen propiedades f&#x00ED;sicas constantes.</div></form></li><li id="Q_4_1"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_4_1_Chk" class="MSelCheckbox" />Las mezclas tienen propiedades f&#x00ED;sicas constantes</div></form></li><li id="Q_4_2"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_4_2_Chk" class="MSelCheckbox" />Una mezcla tiene una composici&#x00F3;n variable.</div></form></li><li id="Q_4_3"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_4_3_Chk" class="MSelCheckbox" />Un compuesto tiene una composici&#x00F3;n fija.</div></form></li></ol><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckMultiSelAnswer(4)">Comprobar</button></li>
<li class="QuizQuestion" id="Q_5" style="display: none;"><div class="QuestionText">Los qu&#x00ED;micos describen los compuestos usando los s&#x00ED;mbolos qu&#x00ED;micos de los elementos que los constituyen. Cuando en esta descripci&#x00F3;n &#x00FA;nicamente se indica la proporci&#x00F3;n de &#x00E1;tomos de los diferentes elementos que lo constituyen, la f&#x00F3;rmula se llama f&#x00F3;rmula... </div><div class="ShortAnswer" id="Q_5_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_5_Guess" onfocus="TrackFocus('Q_5_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="9"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(5)">Comprobar</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(5)">Pista</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(5)">Muestra la respuesta</button></div></form></div></li>
<li class="QuizQuestion" id="Q_6" style="display: none;"><div class="QuestionText">La f&#x00F3;rmula que indica el tipo y n&#x00FA;mero de &#x00E1;tomos que constituyen una mol&#x00E9;cula se llama f&#x00F3;rmula...</div><div class="ShortAnswer" id="Q_6_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_6_Guess" onfocus="TrackFocus('Q_6_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="9"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(6)">Comprobar</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(6)">Pista</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(6)">Muestra la respuesta</button></div></form></div></li>
<li class="QuizQuestion" id="Q_7" style="display: none;"><div class="QuestionText">En el sulfuro de cinc (ZnS). El cati&#x00F3;n es:</div><ol class="MCAnswers"><li id="Q_7_0"><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" id="Q_7_0_Btn" onclick="CheckMCAnswer(7,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Zn<sup>2+</sup></li><li id="Q_7_1"><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" id="Q_7_1_Btn" onclick="CheckMCAnswer(7,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;S<sup>2-</sup></li></ol></li>
<li class="QuizQuestion" id="Q_8" style="display: none;"><div class="QuestionText">Un cati&#x00F3;n es:</div><ol class="MSelAnswers"><li id="Q_8_0"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_8_0_Chk" class="MSelCheckbox" />Un &#x00E1;tomo con carga negativa</div></form></li><li id="Q_8_1"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_8_1_Chk" class="MSelCheckbox" />Un &#x00E1;tomo con carga positiva</div></form></li><li id="Q_8_2"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_8_2_Chk" class="MSelCheckbox" />Una mol&#x00E9;cula sin carga</div></form></li><li id="Q_8_3"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_8_3_Chk" class="MSelCheckbox" />Un &#x00E1;tomo con menos electrones que en su estado neutro.</div></form></li></ol><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckMultiSelAnswer(8)">Comprobar</button></li>
<li class="QuizQuestion" id="Q_9" style="display: none;"><div class="QuestionText">Cuando dos elementos forman un enlace i&#x00F3;nico, a temperatura y presi&#x00F3;n habituales:</div><ol class="MSelAnswers"><li id="Q_9_0"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_9_0_Chk" class="MSelCheckbox" />Forman cristales</div></form></li><li id="Q_9_1"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_9_1_Chk" class="MSelCheckbox" />Forman mol&#x00E9;culas</div></form></li><li id="Q_9_2"><form method="post" action="" onsubmit="return false;"><div><input type="checkbox" id="Q_9_2_Chk" class="MSelCheckbox" />Forman s&#x00F3;lidos amorfos</div></form></li></ol><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckMultiSelAnswer(9)">Comprobar</button></li></ol>



</div>



<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="HideFeedback(); return false;">&nbsp;De acuerdo&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
